<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" debug="false">
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <jmxConfigurator/>

    <!-- 定义日志的根目录 -->
    <property name="LOG_HOME" value="${LOG_PATH}"/>

    <!--为了防止进程退出时，内存中的数据丢失，请加上此选项-->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] - [%-5level] [%logger{50} : %line] - %msg%n</pattern>
        </layout>
    </appender>

    <appender name="appLogAppender" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <key>catalog</key>
            <defaultValue>main</defaultValue>
        </discriminator>
        <sift>
            <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
            <appender name="FILE-${catalog}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <Encoding>UTF-8</Encoding>
                <!-- 指定日志文件的名称 -->
                <file>${LOG_HOME}/${catalog}/${catalog}.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>${LOG_HOME}/${catalog}/${catalog}.log.%d{yyyy-MM-dd}</fileNamePattern>
                </rollingPolicy>
                <append>true</append>
                <layout class="ch.qos.logback.classic.PatternLayout">
                    <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] - [%-5level] [%logger{50} : %line] - %msg%n
                    </pattern>
                </layout>
            </appender>
        </sift>
    </appender>
    <!--
    logger主要用于存放日志对象，也可以定义日志类型、级别
    name：表示匹配的logger类型前缀，也就是包的前半部分
    level：要记录的日志级别，包括 TRACE < DEBUG < INFO < WARN < ERROR
    additivity：作用在于children-logger是否使用 rootLogger配置的appender进行输出，false：表示只用当前logger的appender-ref，true：表示当前logger的appender-ref和rootLogger的appender-ref都有效
    -->
    <!-- Spring framework logger -->
    <logger name="org.springframework" level="error" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="ch.qos.logback" level="error" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="org.hibernate" level="error" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="org.apache" level="error" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="io.undertow" level="error" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="com.netflix" level="info" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="org.xnio" level="info" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="com.alibaba" level="error" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="springfox.documentation" level="error" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="com.cesske.mps.filter.ApiUrlAspect" level="info" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>
    <logger name="com.cesske.mps" level="debug" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </logger>

    <!--
    root与logger是父子关系，没有特别定义则默认为root，任何一个类只会和一个logger对应，
    要么是定义的logger，要么是root，判断的关键在于找到这个logger，然后判断这个logger的appender和level。
    -->
    <root level="info">
        <appender-ref ref="stdout"/>
        <appender-ref ref="appLogAppender"/>
    </root>
</configuration>